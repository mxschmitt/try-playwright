name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SITE_ADDRESS: https://localhost
      MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
      MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      AMQP_URL: amqp://rabbitmq:5672?heartbeat=5s
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: foobar
    steps:
    - uses: microsoft/playwright-github-action@v1
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Install dependencies
      run: npm ci
      working-directory: e2e
    - name: Pull Docker images
      run: docker-compose pull
    - name: Build Docker images
      run: docker-compose build
    - name: Start Docker containers
      run: docker-compose up -d
    - name: Run e2e tests
      working-directory: e2e
      run: |
        npx wait-on https://localhost/service/control/health
        sleep 10
        npm run test
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        folder: [frontend, worker]
    defaults:
      run:
        working-directory: ${{ matrix.folder }}
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 15.x
    - name: Install
      run: npm ci
    - name: Lint
      run: npm run lint
    - name: Build
      run: npm run build
  build:
    #needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    strategy:
      fail-fast: false
      matrix:
        dockerfile: [worker, file-service, frontend, control-service]
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build . --file ${{ matrix.dockerfile }}/Dockerfile --tag local-image
      - name: Login to GitHub Package Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag local-image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
