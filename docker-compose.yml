version: "3"
services:
  minio:
    image: minio/minio
    command: server /data
    environment:
      - MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY
    volumes:
      - minio_data:/data
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - control
      - worker
    environment:
      - SITE_ADDRESS
    volumes:
      - ${PWD}/cert.pem:/cert.pem
      - ${PWD}/key.pem:/key.pem
  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    deploy:
      replicas: 5
      resources:
        limits:
          memory: 1g
    restart: always
    depends_on:
      - rabbitmq
      - minio
      - file
    # will be injected via the .env file
    environment:
      - FILE_SERVICE_URL=http://file:8080
      - BACKEND_SENTRY_DSN
      - AMQP_URL
  control:
    build:
      context: .
      dockerfile: control-service/Dockerfile
    restart: always
    # will be injected via the .env file
    environment:
      - ETCD_ENDPOINT=etcd:2379
      - CONTROL_HTTP_PORT=8080
      - AMQP_URL
    depends_on:
      - rabbitmq
      - etcd
  etcd:
    image: docker.io/bitnami/etcd:3-debian-10
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    volumes:
      - etcd_data:/bitnami/etcd
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"
  file:
    build:
      context: .
      dockerfile: file-service/Dockerfile
    restart: always
    # will be injected via the .env file
    environment:
      - FILE_HTTP_PORT=8080
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY
    depends_on:
      - minio
  # migrate-db:
  #   build:
  #     context: .
  #     dockerfile: migration/Dockerfile
  #   command: /app
  #   depends_on:
  #     - etcd
  #   volumes:
  #     - ${PWD}/db.sqlite:/db.sqlite
volumes:
  rabbitmq_data:
    driver: local
  etcd_data:
    driver: local
  minio_data:
    driver: local
